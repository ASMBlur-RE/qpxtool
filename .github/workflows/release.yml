name: autobuild

on:
  release:
    types: [published]

jobs:

  win64-gui:
    runs-on: windows-2016
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: false
        install: git make pkg-config mingw-w64-x86_64-gcc mingw-w64-x86_64-ntldd-git mingw-w64-x86_64-qt5 mingw-w64-x86_64-jq zip
    - run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v2
    - name: configure
      run: ./configure
    - name: make
      run: nproc && make -j$(nproc)
    - name: check executable
      run: |
          file gui/release/qpxtool.exe | grep -q 'x86-64, for MS Windows'
    - name: prepare dist
      run: ./.github/workflows/make-dist.sh ${{ github.ref }}
      id: dist
    - name: check executability of dist from cmd.exe
      shell: cmd
      run: |
          cd dist
          qpxtool.exe -h
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.dist.outputs.upload_url }}
        asset_path: ./${{ steps.dist.outputs.archive }}
        asset_name: ${{ steps.dist.outputs.archive }}
        asset_content_type: application/zip

  win32-gui:
    runs-on: windows-2016
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW32
        update: false
        install: git make pkg-config mingw-w64-i686-gcc mingw-w64-i686-ntldd-git mingw-w64-i686-qt5 mingw-w64-i686-jq zip
    - run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v2
    - name: configure
      run: ./configure
    - name: make
      run: nproc && make -j$(nproc)
    - name: check executable
      run: |
          file gui/release/qpxtool.exe | grep -q '386, for MS Windows'
    - name: prepare dist
      run: ./.github/workflows/make-dist.sh ${{ github.ref }}
      id: dist
    - name: check executability of dist from cmd.exe
      shell: cmd
      run: |
          cd dist
          qpxtool.exe -h
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.dist.outputs.upload_url }}
        asset_path: ./${{ steps.dist.outputs.archive }}
        asset_name: ${{ steps.dist.outputs.archive }}
        asset_content_type: application/zip
